# Waxeye Parser Generator
# www.waxeye.org
# Copyright (C) 2008 Orlando D. A. R. Hill
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
# of the Software, and to permit persons to whom the Software is furnished to do
# so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


#
# This grammar describes the Waxeye grammar language.
#

Grammar     <- Ws *Definition


Definition  <- Identifier (LeftArrow | PruneArrow | VoidArrow) Alternation Ws


Alternation <- Sequence *(Alt Sequence)


Sequence    <- +Unit


Unit        <- *(Prefix | Label)
               ( Identifier !(LeftArrow | PruneArrow | VoidArrow)
               | Open Alternation Close
               | Action
               | Literal
               | CaseLiteral
               | CharClass
               | WildCard )


Prefix      <- [?*+:&!] Ws


Label       <- Identifier Ws :'=' Ws


Action      <- :'@' Identifier ?(:'<' Ws Identifier *(Comma Identifier) :'>') Ws


Identifier  <- [a-zA-Z] *[a-zA-Z0-9_-] Ws


Literal     <- :['] +(!['] (LChar | Hex)) :['] Ws


CaseLiteral <- :["] +(!["] (LChar | Hex)) :["] Ws


LChar       <- '\\' [nrt'"\\] | !'\\' !EndOfLine .


CharClass   <- :'[' *(!']' Range) :']' Ws


Range       <- (Char | Hex) ?(:'-' (Char | Hex))


Char        <- '\\' [nrt\-\]\\] | !'\\' !']' !EndOfLine .


Hex         <- :'\\<' [0-9A-Fa-f] [0-9A-Fa-f] :'>'


WildCard    <- :'.' Ws


LeftArrow   <- :'<-' Ws


PruneArrow  <- :'<=' Ws


VoidArrow   <- :'<:' Ws


#################
# Always voided #
#################

Alt         <: '|' Ws


Open        <: '(' Ws


Close       <: ')' Ws


Comma       <: ',' Ws


SComment    <: '#' *(!EndOfLine .) (EndOfLine | !.)


MComment    <: '/*' *(MComment | !'*/' . ) '*/'


EndOfLine   <: '\r\n' | '\n' | '\r'


Ws          <: *([ \t] | EndOfLine | SComment | MComment)
